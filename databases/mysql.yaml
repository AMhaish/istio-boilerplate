##---
# Secret group to store MySQL access info encoded in Base64 format
---
apiVersion: v1
kind: Secret
metadata:
   name: db-credentials
type: Opaque
data:
  mysql-password: <encrypted password>
  mysql-root-password: <encrypted password>
  mysql-user: <encrypted user>
  mysql-db: <encrypted database name>
##---
# Persistent Volume MySQL will use, here an actual storage space will be reserved, I am choosing 20GigaByte for disk-space with read write permissions
# and using manual storage class name (mostly will be normal HDD disk), and define the host path under /mnt/mdata
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
##---
# Persistent Volume Claim with its configuration, this is the claim that will link specific deployment with specific storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
##---
# Deploying headless service, a network entity that describes the MySQL service and on which port it will work on
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
##---
# Creating the deployment using an image from Docker hub and some database configuration, and linking the deployment with the storage claim to be able to access that storage
# choosing also the monut point where MySQL pods can access the storage
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
         env:
          # Use secret in real usage
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: mysql-root-password
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: mysql-db
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: mysql-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: mysql-password
        args: ["--default-authentication-plugin","mysql_native_password"]
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim